
mod std::io

use core::*   // don't ask me why this is needed?
use std::internal

pub proc print(thing) {
    thing |> as_str() |> internal::io::print()
}

pub proc println(thing) {
    thing |> as_str() |> internal::io::println()
}


proc get_error_or(value) {
    case internal::io::has_error() -> return #err internal::io::get_error()
    return #ok value
}


pub proc file_exists(path) {
    return internal::io::file_exists(path)
}

pub proc canonicalize(path) {
    var absolute = internal::io::canonicalize(path)
    return get_error_or(absolute)
}


pub proc is_dir(path) {
    var is = internal::io::is_dir(path)
    return get_error_or(is)
}

pub proc create_dir(path) {
    internal::io::create_dir(path)
    return get_error_or(unit)
}

pub proc read_dir(path) {
    var files = internal::io::read_dir(path)
    return get_error_or(files)
}

pub proc delete_dir(path) {
    internal::io::delete_dir(path)
    return get_error_or(unit)
}


pub proc is_file(path) {
    var is = internal::io::is_file(path)
    return get_error_or(is)
}

pub proc write_file(content, path) {
    internal::io::write_file(content, path)
    return get_error_or(unit)
}

pub proc read_file(path) {
    var content = internal::io::read_file(path)
    return get_error_or(content)
}

pub proc delete_file(path) {
    internal::io::delete_file(path)
    return get_error_or(unit)
}